package minesweeper;

public class Minesweeper
{
    private final int SIZE = 10;
    private CellState currentCellState;
    private CellState[][] cells = new CellState[SIZE][SIZE];

    public enum CellState{UNEXPOSED, EXPOSED};


    public Minesweeper()
    {
        for(int i = 0; i < SIZE; i++)
        {
            for(int j = 0; j < SIZE; j++)
            {
                cells[i][j] = CellState.UNEXPOSED;
            }
        }
        currentCellState = CellState.UNEXPOSED;
    }

    public void exposeCell(int row, int column)
    {
        if(cells[row][column] == CellState.UNEXPOSED && isAnAdjacentCell(row,column) == false) {
            cells[row][column] = CellState.EXPOSED;
            exposeNeighborsOf(row, column);
        }
    }


    protected void exposeNeighborsOf(int row, int column)
    {

    }

    public CellState getCellState(int row, int column)
    {
        return cells[row][column];
    }

    protected boolean isAnAdjacentCell(int row, int column)
    {
        return false;
    }

}
